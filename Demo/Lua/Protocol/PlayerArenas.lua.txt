ByteStreamWriter = luanet.import_type('UNetPkg.ByteStreamWriter')
ByteStreamReader = luanet.import_type('UNetPkg.ByteStreamReader')
NetManager = luanet.import_type('UNetPkg.NetManager')
UNetUtility = luanet.import_type('UNetPkg.UNetUtility')
LuaNetMessage = luanet.import_type('LuaUtility.LuaNetMessage')

RequireLua("Protocol/PlayerArena.lua");

PlayerArenas = {};

function PlayerArenas:new()
	local o = {};
	setmetatable(o, self);
	self.__index = self;
	return o;
end

function PlayerArenas:ToStruct(data)
	local bsr = ByteStreamReader(data);
	self:ToStructReader(bsr);
	bsr:Dispose();
end

function PlayerArenas:ToStructReader(bsr)
	self.pvpRank = bsr:ReadInt();
    self.pvpCount = bsr:ReadInt();
    self.buyCount = bsr:ReadInt();
    local playersCount = bsr:ReadShort();
	self.players = {};
	for i = 0, playersCount-1, 1 do
		local player = PlayerArena:new();
		player:ToStructReader(bsr);
		self.players[i] = player;
	end
end
