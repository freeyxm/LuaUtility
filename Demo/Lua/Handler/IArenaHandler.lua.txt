ByteStreamWriter = luanet.import_type('UNetPkg.ByteStreamWriter')
ByteStreamReader = luanet.import_type('UNetPkg.ByteStreamReader')
NetManager = luanet.import_type('UNetPkg.NetManager')
UNetUtility = luanet.import_type('UNetPkg.UNetUtility')
LuaNetMessage = luanet.import_type('LuaUtility.LuaNetMessage')

RequireLua("Protocol/PlayerArenas.lua");

IArenaHandler = {};

-- args.type - byte
-- callback: callback function.
function IArenaHandler:GetArenaChallengers(args, callback)
	local code = 26000;
	local bsw = ByteStreamWriter();
	bsw:WriteInt(code);
	bsw:WriteByte(args.type);
	local data = bsw:GetBuffer();
	bsw:Dispose();
	
	local msg = LuaNetMessage(code, data, function(rdata)
		local infor = PlayerArenas:new();
		infor:ToStruct(rdata);
		UI:getPvpCallback(infor);
	end);
	NetManager.Instance:AddNetMessage(msg);
end
